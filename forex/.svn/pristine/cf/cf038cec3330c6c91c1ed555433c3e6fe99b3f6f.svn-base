package com.talent.exam.domain;

/**
 * ExamSwap entity. @author MyEclipse Persistence Tools
 */
public class ExamSwap {

	private Integer examSwapNo;
	private String accTypeNo;
	private String direction;
	private String acc;
	private String accAmount;
	private String spot;
	private String startDate;
	private String maturityDate;
	private String fixedType;
	private Integer fixedRate;
	private Integer cbasis;
	private Integer fbasis;
	private Integer frequency;
	private Integer libor;
	private Integer providerNo;
	private Integer point;
	private Integer step;
	private String examScore;
	private String userType;
	
	private ExamContent examContentByExamNo;

	public Integer getExamSwapNo() {
		return examSwapNo;
	}

	public void setExamSwapNo(Integer examSwapNo) {
		this.examSwapNo = examSwapNo;
	}

	public String getAccTypeNo() {
		return accTypeNo;
	}

	public void setAccTypeNo(String accTypeNo) {
		this.accTypeNo = accTypeNo;
	}

	public String getDirection() {
		return direction;
	}

	public void setDirection(String direction) {
		this.direction = direction;
	}

	public String getAcc() {
		return acc;
	}

	public void setAcc(String acc) {
		this.acc = acc;
	}

	public String getAccAmount() {
		return accAmount;
	}

	public void setAccAmount(String accAmount) {
		this.accAmount = accAmount;
	}

	public String getSpot() {
		return spot;
	}

	public void setSpot(String spot) {
		this.spot = spot;
	}

	public String getStartDate() {
		return startDate;
	}

	public void setStartDate(String startDate) {
		this.startDate = startDate;
	}

	public String getMaturityDate() {
		return maturityDate;
	}

	public void setMaturityDate(String maturityDate) {
		this.maturityDate = maturityDate;
	}

	public String getFixedType() {
		return fixedType;
	}

	public void setFixedType(String fixedType) {
		this.fixedType = fixedType;
	}

	public Integer getFixedRate() {
		return fixedRate;
	}

	public void setFixedRate(Integer fixedRate) {
		this.fixedRate = fixedRate;
	}

	public Integer getCbasis() {
		return cbasis;
	}

	public void setCbasis(Integer cbasis) {
		this.cbasis = cbasis;
	}

	public Integer getFbasis() {
		return fbasis;
	}

	public void setFbasis(Integer fbasis) {
		this.fbasis = fbasis;
	}

	public Integer getFrequency() {
		return frequency;
	}

	public void setFrequency(Integer frequency) {
		this.frequency = frequency;
	}

	public Integer getLibor() {
		return libor;
	}

	public void setLibor(Integer libor) {
		this.libor = libor;
	}

	public Integer getProviderNo() {
		return providerNo;
	}

	public void setProviderNo(Integer providerNo) {
		this.providerNo = providerNo;
	}

	public Integer getPoint() {
		return point;
	}

	public void setPoint(Integer point) {
		this.point = point;
	}

	public Integer getStep() {
		return step;
	}

	public void setStep(Integer step) {
		this.step = step;
	}

	public String getExamScore() {
		return examScore;
	}

	public void setExamScore(String examScore) {
		this.examScore = examScore;
	}

	public String getUserType() {
		return userType;
	}

	public void setUserType(String userType) {
		this.userType = userType;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((acc == null) ? 0 : acc.hashCode());
		result = prime * result
				+ ((accAmount == null) ? 0 : accAmount.hashCode());
		result = prime * result
				+ ((accTypeNo == null) ? 0 : accTypeNo.hashCode());
		result = prime * result + ((cbasis == null) ? 0 : cbasis.hashCode());
		result = prime * result
				+ ((direction == null) ? 0 : direction.hashCode());
		result = prime
				* result
				+ ((examContentByExamNo == null) ? 0 : examContentByExamNo
						.hashCode());
		result = prime * result
				+ ((examScore == null) ? 0 : examScore.hashCode());
		result = prime * result
				+ ((examSwapNo == null) ? 0 : examSwapNo.hashCode());
		result = prime * result + ((fbasis == null) ? 0 : fbasis.hashCode());
		result = prime * result
				+ ((fixedRate == null) ? 0 : fixedRate.hashCode());
		result = prime * result
				+ ((fixedType == null) ? 0 : fixedType.hashCode());
		result = prime * result
				+ ((frequency == null) ? 0 : frequency.hashCode());
		result = prime * result + ((libor == null) ? 0 : libor.hashCode());
		result = prime * result
				+ ((maturityDate == null) ? 0 : maturityDate.hashCode());
		result = prime * result + ((point == null) ? 0 : point.hashCode());
		result = prime * result
				+ ((providerNo == null) ? 0 : providerNo.hashCode());
		result = prime * result + ((spot == null) ? 0 : spot.hashCode());
		result = prime * result
				+ ((startDate == null) ? 0 : startDate.hashCode());
		result = prime * result + ((step == null) ? 0 : step.hashCode());
		result = prime * result
				+ ((userType == null) ? 0 : userType.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ExamSwap other = (ExamSwap) obj;
		if (acc == null) {
			if (other.acc != null)
				return false;
		} else if (!acc.equals(other.acc))
			return false;
		if (accAmount == null) {
			if (other.accAmount != null)
				return false;
		} else if (!accAmount.equals(other.accAmount))
			return false;
		if (accTypeNo == null) {
			if (other.accTypeNo != null)
				return false;
		} else if (!accTypeNo.equals(other.accTypeNo))
			return false;
		if (cbasis == null) {
			if (other.cbasis != null)
				return false;
		} else if (!cbasis.equals(other.cbasis))
			return false;
		if (direction == null) {
			if (other.direction != null)
				return false;
		} else if (!direction.equals(other.direction))
			return false;
		if (examContentByExamNo == null) {
			if (other.examContentByExamNo != null)
				return false;
		} else if (!examContentByExamNo.equals(other.examContentByExamNo))
			return false;
		if (examScore == null) {
			if (other.examScore != null)
				return false;
		} else if (!examScore.equals(other.examScore))
			return false;
		if (examSwapNo == null) {
			if (other.examSwapNo != null)
				return false;
		} else if (!examSwapNo.equals(other.examSwapNo))
			return false;
		if (fbasis == null) {
			if (other.fbasis != null)
				return false;
		} else if (!fbasis.equals(other.fbasis))
			return false;
		if (fixedRate == null) {
			if (other.fixedRate != null)
				return false;
		} else if (!fixedRate.equals(other.fixedRate))
			return false;
		if (fixedType == null) {
			if (other.fixedType != null)
				return false;
		} else if (!fixedType.equals(other.fixedType))
			return false;
		if (frequency == null) {
			if (other.frequency != null)
				return false;
		} else if (!frequency.equals(other.frequency))
			return false;
		if (libor == null) {
			if (other.libor != null)
				return false;
		} else if (!libor.equals(other.libor))
			return false;
		if (maturityDate == null) {
			if (other.maturityDate != null)
				return false;
		} else if (!maturityDate.equals(other.maturityDate))
			return false;
		if (point == null) {
			if (other.point != null)
				return false;
		} else if (!point.equals(other.point))
			return false;
		if (providerNo == null) {
			if (other.providerNo != null)
				return false;
		} else if (!providerNo.equals(other.providerNo))
			return false;
		if (spot == null) {
			if (other.spot != null)
				return false;
		} else if (!spot.equals(other.spot))
			return false;
		if (startDate == null) {
			if (other.startDate != null)
				return false;
		} else if (!startDate.equals(other.startDate))
			return false;
		if (step == null) {
			if (other.step != null)
				return false;
		} else if (!step.equals(other.step))
			return false;
		if (userType == null) {
			if (other.userType != null)
				return false;
		} else if (!userType.equals(other.userType))
			return false;
		return true;
	}

	public ExamContent getExamContentByExamNo() {
		return examContentByExamNo;
	}

	public void setExamContentByExamNo(ExamContent examContentByExamNo) {
		this.examContentByExamNo = examContentByExamNo;
	}
}
